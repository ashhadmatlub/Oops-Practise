package java_collections;

import java.util.*;

public class LinkedHashing {
    public static void main(String[] args) {

        // LINKED HASHSETS IN JAVA COLLECTION FRAMEWORK ( JCF )
        // Set<String> linkedHashSet = new LinkedHashSet<>();

        // Insertion
        // the data will be printed in the same order as it is Inserted
        // takes null one time and add in the same place
        // ignores duplicates
        // it hashSet have value , the value is converted into the key and the
        // in place of value there is dummy object or you could say
        // LinkedHashSet stores elements as keys in an internal LinkedHashMap, with a
        // constant dummy value.
        // there is head and tail conecpt in it
        // after = tells which is added after
        // before = tells the previous
        // next = tells whether the next place is already filled or not
        // hashCode is being generated by the key
        // and all the value is been placed in the one place according to the hascode

        // linkedHashSet.add("Ahmed");
        // linkedHashSet.add("Ashhad");
        // linkedHashSet.add(null);
        // linkedHashSet.add("Bazil");
        // linkedHashSet.add("Ali");
        // linkedHashSet.add("Ashhad");

        // System.out.println(linkedHashSet);

        // linkedHashSet.remove("Ashhad");
        // System.out.println(linkedHashSet);

        // System.out.println(linkedHashSet.contains("Ali"));

        // Iterator it = linkedHashSet.iterator();
        // while (it.hasNext()) {
        // System.out.println(it.next());
        // }

        // System.out.println(linkedHashSet.size());

        // -------------- Linked HashMap
        LinkedHashMap<String, Integer> linkHashMap = new LinkedHashMap<>();
        linkHashMap.put("Ahmed", 43);
        linkHashMap.put("Ashhad", 67);
        linkHashMap.put(null, null);
        linkHashMap.put("Bazil", 8234);
        linkHashMap.put("Ali", 324);
        linkHashMap.put("Ashhad", 1234); // last so it's become the updated value
        // for similiar keyword
        // remember the value is updated but the insertion order of the Ashhad is the
        // same as previous or the one which is stored first

        System.out.println(linkHashMap);

        // Search
        System.out.println(linkHashMap.containsKey("arsal"));
        System.out.println(linkHashMap.containsKey("Ashhad"));

        // remove
        linkHashMap.remove("Ali");
        System.out.println(linkHashMap);

        for (Map.Entry<String, Integer> e : linkHashMap.entrySet()) {
            System.out.println(e.getKey());
            System.out.println(e.getValue());
        }

    }
}
